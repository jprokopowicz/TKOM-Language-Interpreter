/*Counting power in loop*/
number iterativePower(number base, number power) {
    if([power == 0]) {
        return 1;
    }
    if([1 % power == power]) {
        return 0;
    }
    number counter;
    counter = 0;
    number result;
    result = 1;
    loop ([counter < power]) {
        result = result * base;
        counter = counter + 1;
    }
    return result;
}
/*header for recursive function to see itself*/
number recursivePower(number base, number power);
/*counting power with recursion*/
number recursivePower(number base, number power) {
    if([power == 0]) {
        return 1;
    }
    if([1 % power == power] | [power < 0]) {
        return 0;
    }
    if([power == 1]) {
        return base;
    }
    return base * recursivePower(base, power - 1);
}

/*returned value (string) will be displayed at the end of the program*/
string main() {
    number b;
    number a;
    write string "Hello, calculating power by iteration and recursion\n";
    write string "enter base:";
    read a;
    write string "enter power:";
    read  b;
    number resIterative;
    number resRec;
    resIterative = iterativePower(a, b);
    resRec = recursivePower(a, b);
    write string "Iterative result: ";
    write number resIterative;
    write string "\n";
    write string "Recursive result: ";
    write number resRec;
    write string "\n";
    if([resIterative == resRec]) {
        return "success";
    } else {
        return "fail";
    }
}