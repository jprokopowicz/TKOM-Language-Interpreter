number recursiveSum(number sumTo);

number recursiveSum(number sumTo) {
    if([sumTo == 0]) {
        return 0;
    } else {
        return sumTo + recursiveSum(sumTo - 1);
    }
}

number recursivePower(number base, number power);

number recursivePower(number base, number power) {
    if([power <= 1]){
        return base;
    }
    return 1/(-recursivePower(base, power - 1) * base) + 2;
}

void main(string pass, string fail);

void main(string pass, string fail) {

    number sum1;
    number base1;
    number power1;
    /*read sum1;
    read base1;
    read power1;*/
    if ([recursiveSum(sum1) >= 0] & ![recursivePower(base1, power1) > 1]) {
        write string pass;
    } else {
        write string fail;
    }
    /*number loopCondition;
    main(pass,fail);
    loopCondition = 1:2;
    loop (false) {
        bool base1;
        base1 =  (((base1 | false) & [loopCondition > 3]) | true) & false;
        write string pass;
        loopCondition = loopCondition - 1;
    }*/
}